name: "Code Review Assistant for Azure"
description: "Conducts code reviews for PullRequests"
branding:
    icon: "activity"
    color: "blue"
inputs:
    api-key:
        description: "Azure OpenAI service api key"
        required: true
    endpoint-url:
        description: "Azure OpenAI service access url"
        required: true
runs:
    using: "composite"
    steps:
      - name: Checkout to pull request branch
        uses: actions/checkout@v3
        with:
            ref: ${{ github.event.pull_request.head.sha }}

      - name: Fetch to base branch
        run: git fetch origin ${{ github.event.pull_request.base.sha }}:BASE

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
            python-version: "3.8"
            architecture: "x64"
        
      - name: Install Python Library
        run: |
            pip install --upgrade pip
            pip install openai

      - name: Clone Python Script
        shell: bash
        run: |
            mkrid /tmp/pythonscript
            git clone https://github.com/alterbooth/github-app-on-azure /tmp/pythonscript

      - name: Get code to review
        run: |
            git diff --diff-filter=M --name-only HEAD BASE | grep -f .reviewfiles | grep -v ".github" > modifiedCode.txt
            git diff --diff-filter=A --name-only BASE | grep -f .reviewfiles | grep -v ".github" > addedCode.txt

      - name: Code review with ChatGPT
        shell: bash
        env:
            API_KEY: ${{ github.event.inputs.api-key }}
            ENDPOINT_URL: ${{ github.event.inputs.endpoint-url }}
            GH_TOKEN: ${{ github.token }}
            URL: ${{ github.event.pull_request.html_url }}
        run: |
            cat modifiedCode.txt | while read file_path ; do

                git cat-file -p BASE:${file_path} > before.txt
                git cat-file -p HEAD:${file_path} > after.txt

                result=$(python /tmp/pythonscript/dist/reviewModified.py "${file_path}" "before.txt" "after.txt")
                echo "${result}" > result.txt

                gh pr comment --body-file result.txt "${URL}"
            done
            cat addedCode.txt | while read file_path ; do

                git cat-file -p HEAD:${file_path} > code.txt

                result=$(python /tmp/pythonscript/dist/reviewAdded.py "${file_path}" "code.txt")
                echo "${result}" > result.txt

                gh pr comment --body-file result.txt "${URL}"
            done